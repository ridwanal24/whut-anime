{"version":3,"sources":["component/ImageFile.jsx","component/ImageUrl.jsx","component/ResultItem.jsx","pages/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["ImageFile","loading","setLoading","setResult","anilist","anilistId","setAnilist","setAnilistId","fetchAnilist","Option","Select","Text","Typography","useState","imgUrl","setImgUrl","imgObj","setImgObj","imgSize","setImgSize","blackBorder","setBlackBorder","imageStyle","borderRadius","width","height","lineHeight","margin","border","backgroundImage","backgroundPosition","backgroundSize","loadingUploadComp","Fragment","LoadingOutlined","style","fontSize","color","display","marginTop","type","italic","handleSubmit","a","message","error","formData","FormData","append","console","log","fetch","method","body","res","json","data","result","textAlign","onClick","_","document","querySelector","click","PlusOutlined","disabled","onChange","item","target","files","size","reader","FileReader","addEventListener","readAsDataURL","name","e","value","placeholder","onSelect","marginBottom","map","id","title","romaji","checked","ImageUrl","Paragraph","encodeURIComponent","prefix","GlobalOutlined","ResultItem","episode","from","filename","image","similarity","to","video","Title","Link","idMal","synonyms","isAdult","english","native","popOverContent","index","toTime","second","parseInt","minute","hour","validate","angka","length","Grid","padding","objectFit","hoverable","src","alt","paddingLeft","boxShadow","level","content","trigger","zIndex","InfoCircleTwoTone","href","Main","search","query","opt","headers","JSON","stringify","Page","media","className","float","overflow","objectPosition","process","mode","defaultSelectedKeys","theme","Item","marginLeft","justify","lg","md","sm","xs","minHeight","defaultActiveKey","centered","TabPane","tab","background","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0ec4aec9.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Typography, message, Switch, Input, Select } from 'antd'\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\nimport FormData from 'form-data'\nimport Paragraph from 'antd/lib/typography/Paragraph'\n\nfunction ImageFile({ loading, setLoading, setResult, anilist, setAnilist, anilistId, setAnilistId, fetchAnilist }) {\n    const { Option } = Select\n    const { Text } = Typography\n    const [imgUrl, setImgUrl] = useState('')\n    const [imgObj, setImgObj] = useState('')\n    const [imgSize, setImgSize] = useState('')\n    const [blackBorder, setBlackBorder] = useState(false)\n    const imageStyle = {\n        borderRadius: '10px',\n        width: '25vw',\n        height: '25vw',\n        lineHeight: '25vw',\n        margin: '0 auto',\n        border: imgUrl ? '' : '1px dashed #C5C5C5',\n        backgroundImage: `url(\"${imgUrl}\")`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover'\n    }\n    const loadingUploadComp = (\n        <React.Fragment>\n            <LoadingOutlined style={{ fontSize: '1.5rem', color: '#C5C5C5' }} />\n            <Text style={{ display: 'block', marginTop: '-20vw' }} type=\"secondary\" italic>Loading</Text>\n        </React.Fragment>\n    )\n\n    const handleChange = (item) => {\n        setImgSize(item.target.files[0].size)\n        setImgObj(item.target.files[0])\n        const reader = new FileReader()\n        reader.addEventListener('load', () => {\n            setImgUrl(reader.result)\n        })\n\n        reader.readAsDataURL(item.target.files[0])\n    }\n\n    const handleSubmit = async () => {\n        setLoading(true)\n        if (!imgUrl) {\n            message.error('Please choose image')\n            return\n        }\n        if (imgSize > 9000000) {\n            message.error('Image must be lower than 9 MB')\n            return\n        }\n\n        const formData = new FormData()\n        formData.append('image', imgObj)\n        formData.append('cutBorder', blackBorder)\n        if (anilistId) {\n            formData.append('anilistID', anilistId)\n        }\n        console.log(anilistId)\n        try {\n            const res = await fetch('https://api.trace.moe/search?anilistInfo', {\n                method: 'post',\n                body: formData\n            })\n\n            const data = await res.json()\n            setResult(data.result)\n\n        } catch (e) {\n            console.log(e.message)\n        } finally {\n            setLoading(false)\n        }\n\n    }\n\n    return (\n        <div style={{ textAlign: 'center' }}>\n            <div\n                onClick={_ => document.querySelector('[name=choose_image]').click()}\n                style={imageStyle}\n            >\n                {\n                    !imgUrl ? (\n                        <React.Fragment>\n                            <PlusOutlined style={{ fontSize: '1.5rem', color: '#C5C5C5' }} />\n                            <Text style={{ display: 'block', marginTop: '-20vw', fontSize: '0.5rem' }} type=\"secondary\" italic>Choose image</Text>\n                        </React.Fragment>\n                    ) : (\n                        loading ? loadingUploadComp : ''\n                    )\n                }\n            </div>\n            <input disabled={loading} type=\"file\" onChange={handleChange} style={{ display: 'none' }} name=\"choose_image\" />\n            <Input onChange={e => fetchAnilist(e.target.value)} style={{ width: '20vw' }} placeholder=\"Type here for search anime name\" />\n            <Select disabled={loading} loading={loading} onSelect={e => setAnilistId(e)} style={{ marginTop: '20px', marginBottom: '10px', width: '20vw' }} >\n                {\n                    !anilist ? (\n                        <Option disabled>Type for search</Option>\n                    ) : (\n                        anilist.map(item => <Option value={item.id} >{item.title.romaji}</Option>)\n                    )\n                }\n            </Select>\n            <Paragraph type=\"secondary\" >Type anime name then select from right box (if you know anime name)</Paragraph>\n            <br />\n            <Button disabled={loading} loading={loading} onClick={handleSubmit} type=\"primary\">Search</Button>\n            <br />\n            <br />\n            <Switch disabled={loading} checked={blackBorder} onChange={_ => setBlackBorder(!blackBorder)} /> <Text type=\"secondary\">Cut Black Border</Text>\n            <br />\n            <br />\n            <Text type=\"secondary\" style={{ fontSize: '0.85rem' }} italic>The recommended resolution is 640 x 360px, higher resolution doesn't yield better search results. Your image must be smaller than 9 MB.</Text>\n        </div>\n    )\n}\n\nexport default ImageFile\n","import React, { useState } from 'react'\nimport { GlobalOutlined, LoadingOutlined } from '@ant-design/icons'\nimport { message, Button, Switch, Typography, Input, Select } from 'antd'\n\nfunction ImageUrl({ loading, setLoading, setResult, fetchAnilist, anilist, setAnilistId, anilistId }) {\n    const { Text, Paragraph } = Typography\n    const { Option } = Select\n    const [imgUrl, setImgUrl] = useState('')\n    const [blackBorder, setBlackBorder] = useState(false)\n    const imageStyle = {\n        borderRadius: '10px',\n        width: '25vw',\n        height: '25vw',\n        lineHeight: '25vw',\n        margin: '0 auto',\n        border: imgUrl ? '' : '1px dashed #C5C5C5',\n        backgroundImage: `url(\"${imgUrl}\")`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover'\n    }\n    const loadingUploadComp = (\n        <React.Fragment>\n            <LoadingOutlined style={{ fontSize: '1.5rem', color: '#C5C5C5' }} />\n            <Text style={{ display: 'block', marginTop: '-20vw' }} type=\"secondary\" italic>Loading</Text>\n        </React.Fragment>\n    )\n\n    const handleChange = (e) => {\n        setImgUrl(e.target.value)\n    }\n\n    const handleSubmit = async () => {\n        setLoading(true)\n        if (!imgUrl) {\n            message.error('Please choose image')\n            return\n        }\n\n\n        try {\n            const res = await fetch(`https://api.trace.moe/search?anilistInfo&url=${encodeURIComponent(imgUrl)}${blackBorder ? '&cutBorder' : ''}${anilistId ? '&anilistID=' + anilistId : ''}`)\n\n            const data = await res.json()\n            setResult(data.result)\n            // console.log(data)\n        } catch (e) {\n            console.log(e.message)\n        } finally {\n            setLoading(false)\n        }\n\n    }\n\n    return (\n        <div style={{ textAlign: 'center' }}>\n            <div\n                style={imageStyle}\n            >\n                {\n                    !imgUrl ? (\n                        <React.Fragment>\n                            <Text style={{ display: 'block', fontSize: '0.5rem' }} type=\"secondary\" italic>Your image</Text>\n                        </React.Fragment>\n                    ) : (\n                        loading ? loadingUploadComp : ''\n                    )\n                }\n            </div>\n            <br />\n            <Input disabled={loading} prefix={<GlobalOutlined />} onChange={handleChange} value={imgUrl} placeholder=\"Type image url\" size=\"large\" ></Input>\n            <Input onChange={e => fetchAnilist(e.target.value)} style={{ width: '20vw' }} placeholder=\"Type here for search anime name\" />\n            <Select disabled={loading} loading={loading} onSelect={e => setAnilistId(e)} style={{ marginTop: '20px', marginBottom: '10px', width: '20vw' }} >\n                {\n                    !anilist ? (\n                        <Option disabled>Type for search</Option>\n                    ) : (\n                        anilist.map(item => <Option value={item.id} >{item.title.romaji}</Option>)\n                    )\n                }\n            </Select>\n            <Paragraph type=\"secondary\" >Type anime name then select from right box (if you know anime name)</Paragraph>\n            <Button disabled={loading} loading={loading} style={{ marginTop: '20px' }} onClick={handleSubmit} type=\"primary\">Search</Button>\n            <br />\n            <br />\n            <Switch disabled={loading} checked={blackBorder} onChange={_ => setBlackBorder(!blackBorder)} /> <Text type=\"secondary\">Cut Black Border</Text>\n            <br />\n            <br />\n            <Text type=\"secondary\" style={{ fontSize: '0.85rem' }} italic>The recommended resolution is 640 x 360px, higher resolution doesn't yield better search results. Your image must be smaller than 9 MB.</Text>\n        </div>\n    )\n}\n\nexport default ImageUrl\n","import React from 'react'\nimport { Card, Typography, Button, Tooltip, Popover } from 'antd'\nimport { InfoCircleTwoTone } from '@ant-design/icons'\n\nfunction ResultItem({ anilist, episode, filename, from, image, similarity, to, video }) {\n    const { Paragraph, Title, Link } = Typography\n    const { id, idMal, isAdult, synonyms, title } = anilist\n    const { english, native, romaji } = title\n    const popOverContent = (\n        <div>\n            <Paragraph>{english}</Paragraph>\n            <Paragraph>{native}</Paragraph>\n            <Paragraph>{romaji}</Paragraph>\n            {\n                synonyms.map((item, index) => <Paragraph key={index}>{item}</Paragraph>)\n            }\n        </div>\n    )\n\n\n    const toTime = (second) => {\n        second = parseInt(second)\n        let minute = parseInt(second / 60)\n        second -= minute * 60\n        let hour = parseInt(minute / 60)\n        minute -= hour * 60\n\n        const validate = (angka) => {\n            angka = `${angka}`\n            angka = angka.length === 1 ? `0${angka}` : angka\n            return angka\n        }\n\n\n        return `${validate(hour)}:${validate(minute)}:${validate(second)}`\n    }\n\n    return (\n        <Card style={{ margin: '10px 0' }}>\n            <Card.Grid style={{ width: '40%', padding: 0, objectFit: 'cover' }} hoverable={false} >\n                <img style={{ width: '100%' }} src={image} alt=\"thumbnail\" />\n            </Card.Grid>\n            <Card.Grid style={{ width: '60%', paddingLeft: '20px', boxShadow: 'none' }} hoverable={false}>\n                <Title style={{ marginBottom: 0 }} level={5}>\n                    {romaji}\n                    <Popover content={popOverContent} trigger=\"click\" title=\"Alternative Title\">\n                        <Tooltip zIndex=\"1\" title=\"Alternative Title\" >\n                            <InfoCircleTwoTone />\n                        </Tooltip>\n                    </Popover>\n                </Title>\n                <Paragraph style={{ margin: 0 }} type=\"success\" >Episode {episode}</Paragraph>\n                <Paragraph italic type=\"secondary\">{toTime(from)} - {toTime(to)}</Paragraph>\n                <Paragraph italic type=\"danger\">{parseInt(similarity * 10000) / 100}% Similarity</Paragraph>\n                <div>\n                    <Link href={video} target=\"_blank\">\n                        <Button type=\"primary\">Video</Button>\n                    </Link>\n                    <Link href={'https://myanimelist.net/anime/' + idMal} target=\"_blank\">\n                        <Button type=\"success\">MyAnimeList</Button>\n                    </Link>\n                </div>\n            </Card.Grid>\n        </Card>\n    )\n}\n\nexport default ResultItem\n","import { Menu, Typography, Card, Tabs, Row, Col } from 'antd'\nimport Layout, { Content, Footer, Header } from 'antd/lib/layout/layout'\nimport React, { useState } from 'react'\nimport ImageFile from '../component/ImageFile'\nimport ImageUrl from '../component/ImageUrl'\nimport ResultItem from '../component/ResultItem'\n\nfunction Main() {\n    const { Text, Link, Title } = Typography\n    const [anilist, setAnilist] = useState([])\n    const [anilistId, setAnilistId] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [result, setResult] = useState([])\n\n    const fetchAnilist = async (search) => {\n        setLoading(true)\n        const query = `{\n                            Page(page:1, perPage:100){\n                                media(type:ANIME,search: \"${search}\", sort:ID) {\n                                    id\n                                    title {\n                                        romaji\n                                        english\n                                        native\n                                    }\n                                }\n                            }\n                        }`\n        const opt = {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n            body: JSON.stringify({\n                query: query\n            })\n        }\n        try {\n            const res = await fetch('https://graphql.anilist.co', opt)\n            const data = await res.json()\n\n            setAnilist(data.data.Page.media)\n            console.log(data.data.Page.media)\n        } catch (e) {\n            console.log(e)\n        } finally {\n            setLoading(false)\n        }\n    }\n\n\n    return (\n        <div>\n            <Layout>\n                <Header>\n                    <div className=\"logo\" style={{ height: '32px', float: 'left', lineHeight: '32px', margin: '16px 0 16px 0', overflow: 'hidden' }}>\n                        <img style={{ height: '100%', objectFit: 'cover', objectPosition: 'center center' }} src={process.env.PUBLIC_URL + '/whut-logo.png'} alt=\"\" />\n                    </div>\n                    <Menu mode=\"horizontal\" defaultSelectedKeys={['home']} theme=\"dark\" >\n                        <Menu.Item style={{ marginLeft: 'auto' }} key=\"home\">Home</Menu.Item>\n                        <Menu.Item key=\"about\">About</Menu.Item>\n                    </Menu>\n                </Header>\n                <Content style={{ padding: '50px 0' }}>\n                    <Row justify=\"center\">\n                        <Col lg={16} md={18} sm={20} xs={22} >\n                            <Card style={{ minHeight: '75vh' }}>\n                                <Tabs defaultActiveKey=\"upload\" centered>\n                                    <Tabs.TabPane disabled={loading} tab=\"Upload Image\" key=\"upload\">\n                                        <ImageFile anilistId={anilistId} setAnilistId={setAnilistId} anilist={anilist} setAnilist={setAnilist} fetchAnilist={fetchAnilist} loading={loading} setResult={setResult} setLoading={setLoading} />\n                                    </Tabs.TabPane>\n                                    <Tabs.TabPane disabled={loading} tab=\"From URL\" key=\"url\">\n                                        <ImageUrl anilistId={anilistId} setAnilistId={setAnilistId} anilist={anilist} setAnilist={setAnilist} fetchAnilist={fetchAnilist} loading={loading} setResult={setResult} setLoading={setLoading} />\n                                    </Tabs.TabPane>\n                                </Tabs>\n                            </Card>\n                            <Title style={{ margin: '10px', textAlign: 'center' }} level={2}>Your Result</Title>\n                            <div>\n                                {\n                                    result.map((item, index) => {\n                                        return (\n                                            <ResultItem key={index} {...item} />\n                                        )\n                                    })\n                                }\n                            </div>\n                        </Col>\n                    </Row>\n                </Content>\n                <Footer style={{ background: '#001529', textAlign: 'center' }}>\n                    <Text italic style={{ color: 'white' }} >Dibuat oleh <Link href=\"http://github.com/ridwanal24\">Orang Ini</Link> </Text>\n                    <br />\n                    <Text italic style={{ color: 'white' }}>Menggunakan ReactJS dengan API dari <Link href=\"https://soruly.github.io/trace.moe-api\">trace.moe</Link> </Text>\n                </Footer>\n            </Layout>\n        </div >\n    )\n}\n\nexport default Main\n","import Main from \"./pages/Main\";\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}