{"version":3,"sources":["component/ImageFile.jsx","component/ImageUrl.jsx","component/ResultItem.jsx","pages/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["ImageFile","loading","setLoading","setResult","Text","Typography","useState","imgUrl","setImgUrl","imgObj","setImgObj","imgSize","setImgSize","blackBorder","setBlackBorder","imageStyle","borderRadius","width","height","lineHeight","margin","border","backgroundImage","backgroundPosition","backgroundSize","loadingUploadComp","Fragment","LoadingOutlined","style","fontSize","color","display","marginTop","type","italic","handleSubmit","a","message","error","formData","FormData","append","fetch","method","body","res","json","data","result","console","log","textAlign","onClick","_","document","querySelector","click","PlusOutlined","disabled","onChange","item","target","files","size","reader","FileReader","addEventListener","readAsDataURL","name","checked","ImageUrl","encodeURIComponent","prefix","GlobalOutlined","e","value","placeholder","ResultItem","anilist","episode","from","filename","image","similarity","to","video","Paragraph","Title","Link","idMal","id","synonyms","isAdult","title","english","native","romaji","popOverContent","map","index","toTime","second","parseInt","minute","hour","validate","angka","length","Grid","padding","objectFit","hoverable","src","alt","paddingLeft","boxShadow","marginBottom","level","content","trigger","zIndex","InfoCircleTwoTone","href","Main","className","float","overflow","objectPosition","process","mode","defaultSelectedKeys","theme","Item","marginLeft","justify","lg","md","sm","xs","minHeight","defaultActiveKey","centered","TabPane","tab","background","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db33c7b1.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Typography, message, Switch } from 'antd'\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\nimport FormData from 'form-data'\n\nfunction ImageFile({ loading, setLoading, setResult }) {\n    const { Text } = Typography\n    const [imgUrl, setImgUrl] = useState('')\n    const [imgObj, setImgObj] = useState('')\n    const [imgSize, setImgSize] = useState('')\n    const [blackBorder, setBlackBorder] = useState(false)\n    const imageStyle = {\n        borderRadius: '10px',\n        width: '25vw',\n        height: '25vw',\n        lineHeight: '25vw',\n        margin: '0 auto',\n        border: imgUrl ? '' : '1px dashed #C5C5C5',\n        backgroundImage: `url(\"${imgUrl}\")`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover'\n    }\n    const loadingUploadComp = (\n        <React.Fragment>\n            <LoadingOutlined style={{ fontSize: '1.5rem', color: '#C5C5C5' }} />\n            <Text style={{ display: 'block', marginTop: '-20vw' }} type=\"secondary\" italic>Loading</Text>\n        </React.Fragment>\n    )\n\n    const handleChange = (item) => {\n        setImgSize(item.target.files[0].size)\n        setImgObj(item.target.files[0])\n        const reader = new FileReader()\n        reader.addEventListener('load', () => {\n            setImgUrl(reader.result)\n        })\n\n        reader.readAsDataURL(item.target.files[0])\n    }\n\n    const handleSubmit = async () => {\n        setLoading(true)\n        if (!imgUrl) {\n            message.error('Please choose image')\n            return\n        }\n        if (imgSize > 9000000) {\n            message.error('Image must be lower than 9 MB')\n            return\n        }\n\n        const formData = new FormData()\n        formData.append('image', imgObj)\n        formData.append('cutBorder', blackBorder)\n        try {\n            const res = await fetch('https://api.trace.moe/search?anilistInfo', {\n                method: 'post',\n                body: formData\n            })\n\n            const data = await res.json()\n            setResult(data.result)\n\n        } catch (e) {\n            console.log(e.message)\n        } finally {\n            setLoading(false)\n        }\n\n    }\n\n    return (\n        <div style={{ textAlign: 'center' }}>\n            <div\n                onClick={_ => document.querySelector('[name=choose_image]').click()}\n                style={imageStyle}\n            >\n                {\n                    !imgUrl ? (\n                        <React.Fragment>\n                            <PlusOutlined style={{ fontSize: '1.5rem', color: '#C5C5C5' }} />\n\n                            <Text style={{ display: 'block', marginTop: '-20vw', fontSize: '0.5rem' }} type=\"secondary\" italic>Choose image</Text>\n                        </React.Fragment>\n                    ) : (\n                        loading ? loadingUploadComp : ''\n                    )\n                }\n            </div>\n            <input disabled={loading} type=\"file\" onChange={handleChange} style={{ display: 'none' }} name=\"choose_image\" />\n            <Button disabled={loading} style={{ marginTop: '20px' }} onClick={handleSubmit} type=\"primary\">Search</Button>\n            <br />\n            <br />\n            <Switch disabled={loading} checked={blackBorder} onChange={_ => setBlackBorder(!blackBorder)} /> <Text type=\"secondary\">Cut Black Border</Text>\n            <br />\n            <br />\n            <Text type=\"secondary\" style={{ fontSize: '0.85rem' }} italic>The recommended resolution is 640 x 360px, higher resolution doesn't yield better search results. Your image must be smaller than 9 MB.</Text>\n        </div>\n    )\n}\n\nexport default ImageFile\n","import React, { useState } from 'react'\nimport { GlobalOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons'\nimport { message, Button, Switch, Typography, Input } from 'antd'\n\nfunction ImageUrl({ loading, setLoading, setResult }) {\n    const { Text } = Typography\n    const [imgUrl, setImgUrl] = useState('')\n    const [imgObj, setImgObj] = useState('')\n    const [imgSize, setImgSize] = useState('')\n    const [blackBorder, setBlackBorder] = useState(false)\n    const imageStyle = {\n        borderRadius: '10px',\n        width: '25vw',\n        height: '25vw',\n        lineHeight: '25vw',\n        margin: '0 auto',\n        border: imgUrl ? '' : '1px dashed #C5C5C5',\n        backgroundImage: `url(\"${imgUrl}\")`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover'\n    }\n    const loadingUploadComp = (\n        <React.Fragment>\n            <LoadingOutlined style={{ fontSize: '1.5rem', color: '#C5C5C5' }} />\n            <Text style={{ display: 'block', marginTop: '-20vw' }} type=\"secondary\" italic>Loading</Text>\n        </React.Fragment>\n    )\n\n    const handleChange = (e) => {\n        setImgUrl(e.target.value)\n    }\n\n    const handleSubmit = async () => {\n        setLoading(true)\n        if (!imgUrl) {\n            message.error('Please choose image')\n            return\n        }\n\n\n        try {\n            const res = await fetch(`https://api.trace.moe/search?anilistInfo&url=${encodeURIComponent(imgUrl)}${blackBorder ? '&cutBorder' : ''}`)\n\n            const data = await res.json()\n            setResult(data.result)\n            // console.log(data)\n        } catch (e) {\n            console.log(e.message)\n        } finally {\n            setLoading(false)\n        }\n\n    }\n\n    return (\n        <div style={{ textAlign: 'center' }}>\n            <div\n                style={imageStyle}\n            >\n                {\n                    !imgUrl ? (\n                        <React.Fragment>\n                            <Text style={{ display: 'block', fontSize: '0.5rem' }} type=\"secondary\" italic>Your image</Text>\n                        </React.Fragment>\n                    ) : (\n                        loading ? loadingUploadComp : ''\n                    )\n                }\n            </div>\n            <br />\n            <Input prefix={<GlobalOutlined />} onChange={handleChange} value={imgUrl} placeholder=\"Type image url\" size=\"large\" ></Input>\n            <Button disabled={loading} style={{ marginTop: '20px' }} onClick={handleSubmit} type=\"primary\">Search</Button>\n            <br />\n            <br />\n            <Switch disabled={loading} checked={blackBorder} onChange={_ => setBlackBorder(!blackBorder)} /> <Text type=\"secondary\">Cut Black Border</Text>\n            <br />\n            <br />\n            <Text type=\"secondary\" style={{ fontSize: '0.85rem' }} italic>The recommended resolution is 640 x 360px, higher resolution doesn't yield better search results. Your image must be smaller than 9 MB.</Text>\n        </div>\n    )\n}\n\nexport default ImageUrl\n","import React from 'react'\nimport { Card, Typography, Button, Tooltip, Popover } from 'antd'\nimport { InfoCircleOutlined, InfoCircleTwoTone } from '@ant-design/icons'\n\nfunction ResultItem({ anilist, episode, filename, from, image, similarity, to, video }) {\n    const { Text, Paragraph, Title, Link } = Typography\n    const { id, idMal, isAdult, synonyms, title } = anilist\n    const { english, native, romaji } = title\n    const popOverContent = (\n        <div>\n            <Paragraph>{english}</Paragraph>\n            <Paragraph>{native}</Paragraph>\n            <Paragraph>{romaji}</Paragraph>\n            {\n                synonyms.map((item, index) => <Paragraph key={index}>{item}</Paragraph>)\n            }\n        </div>\n    )\n\n    console.log(english, native, romaji, synonyms)\n\n\n    const toTime = (second) => {\n        second = parseInt(second)\n        let minute = parseInt(second / 60)\n        second -= minute * 60\n        let hour = parseInt(minute / 60)\n        minute -= hour * 60\n\n        const validate = (angka) => {\n            angka = `${angka}`\n            angka = angka.length == 1 ? `0${angka}` : angka\n            return angka\n        }\n\n\n        return `${validate(hour)}:${validate(minute)}:${validate(second)}`\n    }\n\n    return (\n        <Card style={{ margin: '10px 0' }}>\n            <Card.Grid style={{ width: '40%', padding: 0, objectFit: 'cover' }} hoverable={false} >\n                <img style={{ width: '100%' }} src={image} alt=\"thumbnail\" />\n            </Card.Grid>\n            <Card.Grid style={{ width: '60%', paddingLeft: '20px', boxShadow: 'none' }} hoverable={false}>\n                <Title style={{ marginBottom: 0 }} level={5}>\n                    {romaji}\n                    <Popover content={popOverContent} trigger=\"click\" title=\"Alternative Title\">\n                        <Tooltip zIndex=\"1\" title=\"Alternative Title\" >\n                            <InfoCircleTwoTone />\n                        </Tooltip>\n                    </Popover>\n                </Title>\n                <Paragraph style={{ margin: 0 }} type=\"success\" >Episode {episode}</Paragraph>\n                <Paragraph italic type=\"secondary\">{toTime(from)} - {toTime(to)}</Paragraph>\n                <Paragraph italic type=\"danger\">{parseInt(similarity * 10000) / 100}% Similarity</Paragraph>\n                <div>\n                    <Link href={video} target=\"_blank\">\n                        <Button type=\"primary\">Video</Button>\n                    </Link>\n                    <Link href={'https://myanimelist.net/anime/' + idMal} target=\"_blank\">\n                        <Button type=\"success\">MyAnimeList</Button>\n                    </Link>\n                </div>\n            </Card.Grid>\n        </Card>\n    )\n}\n\nexport default ResultItem\n","import { Menu, Typography, Card, Tabs, Row, Col } from 'antd'\nimport Layout, { Content, Footer, Header } from 'antd/lib/layout/layout'\nimport React, { useState } from 'react'\nimport ImageFile from '../component/ImageFile'\nimport ImageUrl from '../component/ImageUrl'\nimport ResultItem from '../component/ResultItem'\n\nfunction Main() {\n    const { Text, Link, Title } = Typography\n    const [loading, setLoading] = useState(false)\n    const [result, setResult] = useState([])\n\n    return (\n        <div>\n            <Layout>\n                <Header>\n                    <div className=\"logo\" style={{ height: '32px', float: 'left', lineHeight: '32px', margin: '16px 0 16px 0', overflow: 'hidden' }}>\n                        <img style={{ height: '100%', objectFit: 'cover', objectPosition: 'center center' }} src={process.env.PUBLIC_URL + '/whut-logo.png'} alt=\"\" />\n                    </div>\n                    <Menu mode=\"horizontal\" defaultSelectedKeys={['home']} theme=\"dark\" >\n                        <Menu.Item style={{ marginLeft: 'auto' }} key=\"home\">Home</Menu.Item>\n                        <Menu.Item key=\"about\">About</Menu.Item>\n                    </Menu>\n                </Header>\n                <Content style={{ padding: '50px 0' }}>\n                    <Row justify=\"center\">\n                        <Col lg={16} md={18} sm={20} xs={22} >\n                            <Card style={{ minHeight: '75vh' }}>\n                                <Tabs defaultActiveKey=\"upload\" centered>\n                                    <Tabs.TabPane disabled={loading} tab=\"Upload Image\" key=\"upload\">\n                                        <ImageFile loading={loading} setResult={setResult} setLoading={setLoading} />\n                                    </Tabs.TabPane>\n                                    <Tabs.TabPane disabled={loading} tab=\"From URL\" key=\"url\">\n                                        <ImageUrl loading={loading} setResult={setResult} setLoading={setLoading} />\n                                    </Tabs.TabPane>\n                                </Tabs>\n                            </Card>\n                            <Title style={{ margin: '10px', textAlign: 'center' }} level={2}>Your Result</Title>\n                            <div>\n                                {\n                                    result.map((item, index) => {\n                                        return (\n                                            <ResultItem key={index} {...item} />\n                                        )\n                                    })\n                                }\n                            </div>\n                        </Col>\n                    </Row>\n                </Content>\n                <Footer style={{ background: '#001529', textAlign: 'center' }}>\n                    <Text italic style={{ color: 'white' }} >Dibuat oleh <Link href=\"http://github.com/ridwanal24\">Orang Ini</Link> </Text>\n                    <br />\n                    <Text italic style={{ color: 'white' }}>Menggunakan ReactJS dengan API dari <Link href=\"https://soruly.github.io/trace.moe-api\">trace.moe</Link> </Text>\n                </Footer>\n            </Layout>\n        </div >\n    )\n}\n\nexport default Main\n","import Main from \"./pages/Main\";\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}